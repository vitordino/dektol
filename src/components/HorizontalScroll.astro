---
import PageMap from '~/components/PageMap.astro'
---

<PageMap>
  <div class="horizontal-scroll-wrapper">
    <div class="horizontal-scroll-middle">
      <div class="horizontal-scroll-inner" data-map="container">
        <slot />
      </div>
    </div>
  </div>
</PageMap>

<script hoist>
  const middle = '.horizontal-scroll-middle'
  const inner = '.horizontal-scroll-inner'
  const isVertical = window.innerWidth < 720

  const setParentSticky = (element, value) =>
    element.parentElement.setAttribute('data-sticky', value.toString())

  const onScroll = () =>
    document.querySelectorAll(middle).forEach(container => {
      const innerElement = container.querySelector(inner)
      const { y } = container.getBoundingClientRect()

      const isBeforeSection = y > 0
      const reachedLeftEnd = innerElement.scrollLeft === 0

      const isAfterSection = -y > innerElement.scrollWidth - window.innerWidth
      const reachedRihtEnd = innerElement.scrollLeft <= innerElement.scrollWidth

      const isOutOfBounds =
        (isBeforeSection && reachedLeftEnd) || (isAfterSection && reachedRihtEnd)

      const shouldBeSticky = !isOutOfBounds

      setParentSticky(container, shouldBeSticky)
      if (shouldBeSticky) innerElement.scrollLeft = -y
    })

  const setStickyContainersSize = () =>
    document.querySelectorAll(middle).forEach(container => {
      const stickyContainerHeight =
        container.querySelector(inner).scrollWidth + window.innerHeight - window.innerWidth
      container.setAttribute('style', 'height: ' + stickyContainerHeight + 'px')
    })

  const resetStickyContainersSize = () =>
    document.querySelectorAll(middle).forEach(container => {
      container.removeAttribute('style')
    })

  const listen = () => {
    window.addEventListener('scroll', onScroll)
    setStickyContainersSize()
  }
  const unlisten = () => {
    window.removeEventListener('scroll', onScroll)
    resetStickyContainersSize({ middle })
  }

  window.addEventListener('load', listen)
  window.addEventListener('resize', () => {
    unlisten()
    if (!isVertical) listen()
  })
</script>

<style global>
  @media (min-width: 720px) {
    .horizontal-scroll-wrapper {
      position: relative;
    }

    .horizontal-scroll-middle {
      position: relative;
      z-index: 1;
      pointer-events: none;
    }

    .horizontal-scroll-inner {
      overflow-x: hidden;
      display: flex;
      position: sticky;
      top: 0;
    }

    .horizontal-scroll-inner::before,
    .horizontal-scroll-inner::after {
      content: '';
      position: relative;
      margin: 0 22px;
      height: 100%;
      background: red;
    }
  }
</style>
