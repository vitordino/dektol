<div class="horizontal-scroll-wrapper">
  <div class="horizontal-scroll-middle">
    <div class="horizontal-scroll-inner">
      <slot />
    </div>
  </div>
</div>

<script hoist>
  const middle = '.horizontal-scroll-middle'
  const inner = '.horizontal-scroll-inner'
  const isHorizontal = window.innerWidth < 720

  const onWheel = () =>
    document.querySelectorAll(middle).forEach(x => {
      const { y } = x.getBoundingClientRect()
      if (y > 0) return
      if (x.scrollWidth - x.scrollLeft - window.innerWidth) return
      x.querySelector(inner).scrollLeft = -y
    })

  const setStickyContainersSize = () =>
    document.querySelectorAll(middle).forEach(x => {
      const stickyContainerHeight =
        x.querySelector(inner).scrollWidth + window.innerHeight - window.innerWidth
      x.setAttribute('style', 'height: ' + stickyContainerHeight + 'px')
    })

  const resetStickyContainersSize = () =>
    document.querySelectorAll(middle).forEach(x => {
      x.removeAttribute('style')
    })

  const listen = () => {
    window.addEventListener('wheel', onWheel)
    setStickyContainersSize()
  }
  const unlisten = () => {
    window.removeEventListener('wheel', onWheel)
    resetStickyContainersSize({ middle })
  }

  window.addEventListener('load', listen)
  window.addEventListener('resize', () => {
    unlisten()
    if (!isHorizontal) listen()
  })
</script>

<style global>
  @media (min-width: 720px) {
    .horizontal-scroll-wrapper {
      position: relative;
    }

    .horizontal-scroll-middle {
      position: relative;
      z-index: 1;
      pointer-events: none;
    }

    .horizontal-scroll-inner {
      overflow-x: hidden;
      display: flex;
      position: sticky;
      top: 0;
    }

    .horizontal-scroll-inner::before,
    .horizontal-scroll-inner::after {
      content: '';
      position: relative;
      margin: 0 24px;
      height: 100%;
      background: red;
    }
  }
</style>
