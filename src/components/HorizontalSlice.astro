---
import Section from '~/components/Section.astro'
import Image from '~/components/Image.astro'
import { PageDocumentDataBodyHorizontalSlice } from '~/prismic.generated'
export type Props = PageDocumentDataBodyHorizontalSlice
const props = Astro.props as Props
const { items, primary } = props
---

<script src='./HorizontalSlice.ts'></script>

<Section foreground={primary.foreground} background={primary.background} renderBackground={true}>
  <div class='horizontal-slice-wrapper'>
    <div class='horizontal-slice-middle'>
      <div class='horizontal-slice-inner' data-map='container'>
        <div class='horizontal-slice-spacer'></div>
        {items.map(({ image }) => image ? <Image {...image} /> : null )}
        <div class='horizontal-slice-spacer'></div>
        <div class='horizontal-slice-drag-area'></div>
      </div>
    </div>
    <div class='horizontal-slice-map-wrapper'>
      <canvas class='horizontal-slice-map-canvas'></canvas>
      <div class='horizontal-slice-map-brush-left'></div>
      <div class='horizontal-slice-map-brush-right'></div>
    </div>
  </div>
</Section>

<style is:global>
  @media (min-width: 720px) {
    .horizontal-slice-wrapper {
      position: relative;
    }

    .horizontal-slice-middle {
      position: relative;
      z-index: 1;
      pointer-events: none;
    }

    .horizontal-slice-inner {
      overflow-x: hidden;
      display: flex;
      position: sticky;
      top: 0;
    }

    .horizontal-slice-spacer {
      display: block;
      position: relative;
      min-width: 44px;
    }

    .horizontal-slice-drag-area {
      position: fixed;
      top: 64px;
      height: calc(100vh - 128px);
      left: 0;
      width: 100%;
      z-index: 1;
      pointer-events: auto;
      cursor: grab;
    }

    .horizontal-slice-wrapper[data-sticky='false'] .horizontal-slice-drag-area {
      display: none;
    }
  }

  .horizontal-slice-map-wrapper {
    display: none;
  }
  @media (min-width: 720px) {
    .page-map-wrapper {
      position: relative;
    }

    .horizontal-slice-map-wrapper {
      display: block;
      position: sticky;
      bottom: 0;
      height: 0;
      width: 100%;
      transition: 0.3s opacity;
    }

    .horizontal-slice-map-canvas {
      position: absolute;
      bottom: 0;
      height: 64px;
      width: 100%;
    }
    .horizontal-slice-wrapper[data-sticky='false'] .horizontal-slice-map-wrapper {
      pointer-events: none;
      opacity: 0;
      transition: 0.15s opacity;
    }
    .horizontal-slice-wrapper[data-sticky='true'] .horizontal-slice-map-wrapper {
      pointer-events: auto;
      opacity: 1;
    }

    .horizontal-slice-map-brush-left,
    .horizontal-slice-map-brush-right {
      position: absolute;
      bottom: 0;
      height: 64px;
      width: calc(100% - 128px);
      background: var(--background, #fff);
      transform-origin: left;
      left: 64px;
      opacity: 0.8;
    }
    .horizontal-slice-map-brush-right {
      transform-origin: right;
    }
  }
</style>
