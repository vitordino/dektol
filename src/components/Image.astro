---
import type { SingleImageSlice } from '~/slices/types'
import { memoizedGetBase64FromImageUrl } from '~/utils/getBase64FromImageUrl'

export type Props = SingleImageSlice['items'][number]['image']
const props = Astro.props as Props
const { url, dimensions } = props

const src = `${url}&h=600`
const blurHash = await memoizedGetBase64FromImageUrl(`${url}&h=16`)
---

<div class='image-wrapper'>
  {blurHash && <img class="image-blurhash" src={blurHash} aria-hidden="true" />}
  <img
    class="image-main"
    src={src}
    loading="lazy"
    data-loaded="false"
    alt={Astro.props.alt}
    {...dimensions}
    onload="handleImageLoad(this)"
  />
</div>

<style global>
  .image-wrapper {
    display: inline-flex;
    position: relative;
    overflow: hidden;
  }
  .image-blurhash {
    position: absolute;
    left: 0;
    width: 100%;
    top: 0;
    height: 100%;
    object-fit: cover;
    image-rendering: pixelated;
    max-width: none;
  }

  .image-main {
    position: relative;
    transition: 0.5s opacity;
    height: calc(100vh - 128px);
    width: auto;
    max-width: none;
  }

  html[data-js="true"] .image-main[data-loaded="false"] {
    opacity: 0;
  }

  html[data-js="true"] .image-main[data-loaded="true"] {
    opacity: 1;
  }
</style>
